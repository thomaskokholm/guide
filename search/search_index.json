{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Hitchhiker's Guide \u00b6","title":"The Hitchhiker's Guide"},{"location":"#the-hitchhikers-guide","text":"","title":"The Hitchhiker's Guide"},{"location":"Github%20actions/","text":"Deploy mkdocs to GitHub Pages using GitHub Actions \u00b6 If you're already hosting your code on GitHub, GitHub Pages is certainly the most convenient way to publish your project documentation. It's free of charge and pretty easy to set up. with GitHub Actions Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml, and copy and paste the following contents: name: ci on: push: branches: - master - main permissions: contents: write jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - uses: actions/setup-python@v4 with: python-version: 3.x - run: pip install mkdocs-material - run: mkdocs gh-deploy --force","title":"Deploy mkdocs to GitHub Pages using GitHub Actions"},{"location":"Github%20actions/#deploy-mkdocs-to-github-pages-using-github-actions","text":"If you're already hosting your code on GitHub, GitHub Pages is certainly the most convenient way to publish your project documentation. It's free of charge and pretty easy to set up. with GitHub Actions Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml, and copy and paste the following contents: name: ci on: push: branches: - master - main permissions: contents: write jobs: deploy: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - uses: actions/setup-python@v4 with: python-version: 3.x - run: pip install mkdocs-material - run: mkdocs gh-deploy --force","title":"Deploy mkdocs to GitHub Pages using GitHub Actions"},{"location":"Privacy%20bash%20script%20for%20macOS/","text":"The script below automates the proccess of the follow seven privacy tasks om macOS: - Clear Bash terminal history - Clear ZSH terminal history - Clear DNS cache - Purge inactive memory usage - Clear system cache files - Empty trash on all volumes - Clear CUPS printer job cache Usage \u00b6 Paste the script below in a file (i.e. privacy.sh). Ppen up your terminal Navigate to where you saved the file (i.e. privacy.sh) Give the file execute permissions by typing : $ chmod +x privacy.sh Finally run the script by typing $ ./privacy.sh Note that your terminal might ask for your administrator password in order to process the script. #!/usr/bin/env bash # ---------------------------------------------------------- # -------------Request administrator privileges------------- # ---------------------------------------------------------- if [ \"$EUID\" -ne 0 ]; then script_path=$([[ \"$0\" = /* ]] && echo \"$0\" || echo \"$PWD/${0#./}\") sudo \"$script_path\" || ( echo 'Administrator privileges are required.' exit 1 ) exit 0 fi # ---------------------------------------------------------- # --------------------Clear bash history-------------------- # ---------------------------------------------------------- echo '--- Clear bash history' rm -f ~/.bash_history # ---------------------------------------------------------- # ---------------------------------------------------------- # --------------------Clear zsh history--------------------- # ---------------------------------------------------------- echo '--- Clear zsh history' rm -f ~/.zsh_history # ---------------------------------------------------------- # ---------------------------------------------------------- # ---------------------Clear DNS cache---------------------- # ---------------------------------------------------------- echo '--- Clear DNS cache' sudo dscacheutil -flushcache sudo killall -HUP mDNSResponder # ---------------------------------------------------------- # ---------------------------------------------------------- # ------------------Purge inactive memory------------------- # ---------------------------------------------------------- echo '--- Purge inactive memory' sudo purge # ---------------------------------------------------------- # ---------------------------------------------------------- # -----------------Clear system cache files----------------- # ---------------------------------------------------------- echo '--- Clear system cache files' sudo rm -rfv /Library/Caches/* &>/dev/null sudo rm -rfv /System/Library/Caches/* &>/dev/null sudo rm -rfv ~/Library/Caches/* &>/dev/null # ---------------------------------------------------------- # ---------------------------------------------------------- # ----------------Empty trash on all volumes---------------- # ---------------------------------------------------------- echo '--- Empty trash on all volumes' # on all mounted volumes sudo rm -rfv /Volumes/*/.Trashes/* &>/dev/null # on main HDD sudo rm -rfv ~/.Trash/* &>/dev/null # ---------------------------------------------------------- # ---------------------------------------------------------- # ---------------Clear CUPS printer job cache--------------- # ---------------------------------------------------------- echo '--- Clear CUPS printer job cache' sudo rm -rfv /var/spool/cups/c0* sudo rm -rfv /var/spool/cups/tmp/* sudo rm -rfv /var/spool/cups/cache/job.cache* # ---------------------------------------------------------- echo 'Privacy and security script completed!' echo 'Press any key to exit.' read -n 1 -s This script is based on the open source tool by UndergroundWires . Check out the repository for details and even more privacy scripts.","title":"Privacy bash script for macOS"},{"location":"Privacy%20bash%20script%20for%20macOS/#usage","text":"Paste the script below in a file (i.e. privacy.sh). Ppen up your terminal Navigate to where you saved the file (i.e. privacy.sh) Give the file execute permissions by typing : $ chmod +x privacy.sh Finally run the script by typing $ ./privacy.sh Note that your terminal might ask for your administrator password in order to process the script. #!/usr/bin/env bash # ---------------------------------------------------------- # -------------Request administrator privileges------------- # ---------------------------------------------------------- if [ \"$EUID\" -ne 0 ]; then script_path=$([[ \"$0\" = /* ]] && echo \"$0\" || echo \"$PWD/${0#./}\") sudo \"$script_path\" || ( echo 'Administrator privileges are required.' exit 1 ) exit 0 fi # ---------------------------------------------------------- # --------------------Clear bash history-------------------- # ---------------------------------------------------------- echo '--- Clear bash history' rm -f ~/.bash_history # ---------------------------------------------------------- # ---------------------------------------------------------- # --------------------Clear zsh history--------------------- # ---------------------------------------------------------- echo '--- Clear zsh history' rm -f ~/.zsh_history # ---------------------------------------------------------- # ---------------------------------------------------------- # ---------------------Clear DNS cache---------------------- # ---------------------------------------------------------- echo '--- Clear DNS cache' sudo dscacheutil -flushcache sudo killall -HUP mDNSResponder # ---------------------------------------------------------- # ---------------------------------------------------------- # ------------------Purge inactive memory------------------- # ---------------------------------------------------------- echo '--- Purge inactive memory' sudo purge # ---------------------------------------------------------- # ---------------------------------------------------------- # -----------------Clear system cache files----------------- # ---------------------------------------------------------- echo '--- Clear system cache files' sudo rm -rfv /Library/Caches/* &>/dev/null sudo rm -rfv /System/Library/Caches/* &>/dev/null sudo rm -rfv ~/Library/Caches/* &>/dev/null # ---------------------------------------------------------- # ---------------------------------------------------------- # ----------------Empty trash on all volumes---------------- # ---------------------------------------------------------- echo '--- Empty trash on all volumes' # on all mounted volumes sudo rm -rfv /Volumes/*/.Trashes/* &>/dev/null # on main HDD sudo rm -rfv ~/.Trash/* &>/dev/null # ---------------------------------------------------------- # ---------------------------------------------------------- # ---------------Clear CUPS printer job cache--------------- # ---------------------------------------------------------- echo '--- Clear CUPS printer job cache' sudo rm -rfv /var/spool/cups/c0* sudo rm -rfv /var/spool/cups/tmp/* sudo rm -rfv /var/spool/cups/cache/job.cache* # ---------------------------------------------------------- echo 'Privacy and security script completed!' echo 'Press any key to exit.' read -n 1 -s This script is based on the open source tool by UndergroundWires . Check out the repository for details and even more privacy scripts.","title":"Usage"}]}